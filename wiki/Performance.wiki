#summary performance page
#labels Featured

In this test, it measured the elapsed time of serializing and deserializing.

If the elapsed time will be performed 10,000 times.

= Functions =
|| || *default* || *msgpack* ||
|| *serialize* || _serialize()_ || _msgpack_serialzie()_ ||
|| *unserialize* || _unserialize()_ || _msgpack_unserialize()_ ||

= Performances =
== Integer ==
=== Value ===
{{{
$values = rand();
}}}

=== Speed (sec) ===
|| || *default* || *msgpack* ||
|| *serialize* || 0.059 _(100%)_ || 0.059 _(104%)_ ||
|| *unserialize* || 0.054 _(100%)_ || 0.052 _(96%)_ ||

=== Size (byte) ===
|| *default* || *msgpack* ||
|| 13 _(100%)_ || 5 _(38%)_ ||


== Floating point number ==
=== Value ===
{{{
$value = log(rand());
}}}

=== Speed (sec) ===
|| || *default* || *msgpack* ||
|| *serialize* || 0.242 _(100%)_ || 0.059 _(24%)_ ||
|| *unserialize* || 0.167 _(100%)_ || 0.051 _(31%)_ ||

=== Size (byte) ===
|| default || msgpack ||
|| 54 _(100%)_ || 9 _(16%)_ ||


== String ==
=== Value ===
{{{
$value = md5(rand());
}}}

=== Speed (sec) ===
|| || *default* || *msgpack* ||
|| *serialize* || 0.057 _(100%)_ || 0.059 _(104%)_ ||
|| *unserialize* || 0.055 _(100%)_ || 0.055 _(100%)_ ||

=== Size (byte) ===
|| *default* || *msgpack* ||
|| 40 _(100%)_ || 35 _(87%)_ ||


== Array ==
=== Value ===
{{{
$value = array(md5(rand()), md5(rand()), md5(rand()), md5(rand()), md5(rand()));
}}}

=== Speed (sec) ===
|| || *default* || *msgpack* ||
|| *serialize* || 0.142 _(100%)_ || 0.128 _(90%)_ ||
|| *unserialize* || 0.167 _(100%)_ || 0.148 _(89%)_ ||

=== Size (byte) ===
|| *default* || *msgpack* ||
|| 226 _(100%)_ || 181 _(80%)_ ||


== Array (Hash) ==
=== Value ===
{{{
$value[md5(rand())] = md5(rand());
$value[md5(rand())] = md5(rand());
$value[md5(rand())] = md5(rand());
$value[md5(rand())] = md5(rand());
$value[md5(rand())] = md5(rand());
}}}

=== Speed (sec) ===
|| || *default* || *msgpack* ||
|| *serialize* || 0.157 _(100%)_ || 0.146 _(93%)_ ||
|| *unserialize* || 0.232 _(100%)_ || 0.205 _(88%)_ ||

=== Size (byte) ===
|| *default* || *msgpack* ||
|| 406 _(100%)_ || 351 _(86%)_||


== Object ==
=== Value ===
{{{
$value = new stdClass;
$value->param1 = rand();
$value->param2 = md5(uniqid());
$value->param3 = array(md5(uniqid()));
$value->param4 = array(md5(uniqid()) => md5(uniqid()));
$value->param5 = null;
}}}

=== Speed (sec) ===
|| || *default* || *msgpack* ||
|| *serialize* || 0.190 _(100%)_ || 0.183 _(96%)_ ||
|| *unserialize* || 0.309 _(100%)_ || 0.283 _(92%)_ ||

=== Size (byte) ===
|| *default* || *msgpack* ||
|| 275 _(100%)_ || 195 _(71%)_ ||
